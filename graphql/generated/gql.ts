/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

const documents = {
    "fragment ChapterIndex on ChapterEntity {\n  id\n  attributes {\n    title\n    ...TopicIndex\n  }\n}": types.ChapterIndexFragmentDoc,
    "query getTutorialIndexes {\n  chapters {\n    data {\n      ...ChapterIndex\n    }\n  }\n}": types.GetTutorialIndexesDocument,
    "fragment SubtopicIndex on Topic {\n  subtopics {\n    data {\n      id\n      attributes {\n        title\n      }\n    }\n  }\n}": types.SubtopicIndexFragmentDoc,
    "fragment TopicIndex on Chapter {\n  topics {\n    data {\n      id\n      attributes {\n        title\n        ...SubtopicIndex\n      }\n    }\n  }\n}": types.TopicIndexFragmentDoc,
    "fragment TutorialFull on Tutorial {\n  title\n  content\n  summary\n  ...TutorialCover\n  ...TutorialCategories\n}\n\nfragment TutorialCard on Tutorial {\n  title\n  summary\n  ...TutorialCover\n  ...TutorialCategories\n}\n\nfragment TutorialCategories on Tutorial {\n  categories {\n    data {\n      attributes {\n        name\n      }\n    }\n  }\n}\n\nfragment TutorialCover on Tutorial {\n  cover {\n    data {\n      attributes {\n        url\n        alternativeText\n      }\n    }\n  }\n}": types.TutorialFullFragmentDoc,
    "query getAllTutorials($pagination: PaginationArg, $filters: TutorialFiltersInput) {\n  tutorials(pagination: $pagination, filters: $filters) {\n    data {\n      id\n      attributes {\n        ...TutorialCard\n      }\n    }\n  }\n}\n\nquery getAllTutorialIds {\n  tutorials {\n    data {\n      id\n    }\n  }\n}\n\nquery getOneTutorial($id: ID!) {\n  tutorial(id: $id) {\n    data {\n      id\n      attributes {\n        ...TutorialFull\n      }\n    }\n  }\n}": types.GetAllTutorialsDocument,
};

export function graphql(source: "fragment ChapterIndex on ChapterEntity {\n  id\n  attributes {\n    title\n    ...TopicIndex\n  }\n}"): (typeof documents)["fragment ChapterIndex on ChapterEntity {\n  id\n  attributes {\n    title\n    ...TopicIndex\n  }\n}"];
export function graphql(source: "query getTutorialIndexes {\n  chapters {\n    data {\n      ...ChapterIndex\n    }\n  }\n}"): (typeof documents)["query getTutorialIndexes {\n  chapters {\n    data {\n      ...ChapterIndex\n    }\n  }\n}"];
export function graphql(source: "fragment SubtopicIndex on Topic {\n  subtopics {\n    data {\n      id\n      attributes {\n        title\n      }\n    }\n  }\n}"): (typeof documents)["fragment SubtopicIndex on Topic {\n  subtopics {\n    data {\n      id\n      attributes {\n        title\n      }\n    }\n  }\n}"];
export function graphql(source: "fragment TopicIndex on Chapter {\n  topics {\n    data {\n      id\n      attributes {\n        title\n        ...SubtopicIndex\n      }\n    }\n  }\n}"): (typeof documents)["fragment TopicIndex on Chapter {\n  topics {\n    data {\n      id\n      attributes {\n        title\n        ...SubtopicIndex\n      }\n    }\n  }\n}"];
export function graphql(source: "fragment TutorialFull on Tutorial {\n  title\n  content\n  summary\n  ...TutorialCover\n  ...TutorialCategories\n}\n\nfragment TutorialCard on Tutorial {\n  title\n  summary\n  ...TutorialCover\n  ...TutorialCategories\n}\n\nfragment TutorialCategories on Tutorial {\n  categories {\n    data {\n      attributes {\n        name\n      }\n    }\n  }\n}\n\nfragment TutorialCover on Tutorial {\n  cover {\n    data {\n      attributes {\n        url\n        alternativeText\n      }\n    }\n  }\n}"): (typeof documents)["fragment TutorialFull on Tutorial {\n  title\n  content\n  summary\n  ...TutorialCover\n  ...TutorialCategories\n}\n\nfragment TutorialCard on Tutorial {\n  title\n  summary\n  ...TutorialCover\n  ...TutorialCategories\n}\n\nfragment TutorialCategories on Tutorial {\n  categories {\n    data {\n      attributes {\n        name\n      }\n    }\n  }\n}\n\nfragment TutorialCover on Tutorial {\n  cover {\n    data {\n      attributes {\n        url\n        alternativeText\n      }\n    }\n  }\n}"];
export function graphql(source: "query getAllTutorials($pagination: PaginationArg, $filters: TutorialFiltersInput) {\n  tutorials(pagination: $pagination, filters: $filters) {\n    data {\n      id\n      attributes {\n        ...TutorialCard\n      }\n    }\n  }\n}\n\nquery getAllTutorialIds {\n  tutorials {\n    data {\n      id\n    }\n  }\n}\n\nquery getOneTutorial($id: ID!) {\n  tutorial(id: $id) {\n    data {\n      id\n      attributes {\n        ...TutorialFull\n      }\n    }\n  }\n}"): (typeof documents)["query getAllTutorials($pagination: PaginationArg, $filters: TutorialFiltersInput) {\n  tutorials(pagination: $pagination, filters: $filters) {\n    data {\n      id\n      attributes {\n        ...TutorialCard\n      }\n    }\n  }\n}\n\nquery getAllTutorialIds {\n  tutorials {\n    data {\n      id\n    }\n  }\n}\n\nquery getOneTutorial($id: ID!) {\n  tutorial(id: $id) {\n    data {\n      id\n      attributes {\n        ...TutorialFull\n      }\n    }\n  }\n}"];

export function graphql(source: string): unknown;
export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;